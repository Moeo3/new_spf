#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

const int sw1 = 3, sw2 = 5, sw3 = 4;

vector<double> features2hist(const vector<double> features) {
    if (features.size() == 0) return vector<double>{};

    vector <double> ema1, ema2, macd, sig, hist;
    ema1.push_back(features[0]);
    ema2.push_back(features[0]);
    macd.push_back(0);
    sig.push_back(0);
    hist.push_back(0);
    double gamma1 = 2. / (sw1 - 1), gamma2 = 2. / (sw2 - 1);
        for (int i = 1; i < features.size(); ++ i) {
        ema1.push_back(gamma1 * features[i] + (1 - gamma1) * ema1[i - 1]);
        // if (i > sw1) ema1[i] -= gamma1 * pow(1 - gamma1, sw1 + 1) * features[i - sw1 - 1];
        ema2.push_back(gamma2 * features[i] + (1 - gamma2) * ema2[i - 1]);
        // if (i > sw2) ema2[i] -= gamma2 * pow(1 - gamma2, sw2 + 1) * features[i - sw2 - 1];
        macd.push_back(ema1[i] - ema2[i]);
    }
    double gamma3 = 2. / (sw3 - 1);
    for (int i = 1; i < features.size(); ++ i) {
        sig.push_back(gamma3 * macd[i] + (1 - gamma3) * sig[i - 1]);
        // if (i > sw3) sig[i] -= gamma3 * pow(1 - gamma3, sw3 + 1) * features[i - sw3 - 1];
        hist.push_back(macd[i] - sig[i]);
    }
    return hist;
}

int main() {
    vector <double> features({1.6979,1.5624,1.4399,1.3268,1.2208,1.1184,1.0196,0.92483,0.83183,0.7433,0.66104,0.58592,0.51573,0.44777,0.38517,0.32705,0.27518,0.23092,0.19202,0.15804,0.12585,0.095446,0.069514,0.049394,0.035981,0.024803,0.010943,-0.00068213,-0.0015763,0.010496,0.038216,0.090081,0.17458,0.30156,0.49427,0.80322,1.2879,1.8687,2.0873,1.5973,0.9056,0.42675,0.18129,0.079797,0.06549,0.11557,0.21304,0.33554,0.42318,0.38607,0.21751,0.017649,-0.13303,-0.22647,-0.27789,-0.30606,-0.32528,-0.34317,-0.36105,-0.37938,-0.4004,-0.42588,-0.45271,-0.4764,-0.49339,-0.50413,-0.51217,-0.52156,-0.53498,-0.55018,-0.5618,-0.56761,-0.57164,-0.57432,-0.57566,-0.57477,-0.57119,-0.56672,-0.56001,-0.55241,-0.54526,-0.53945,-0.53498,-0.5305,-0.52559,-0.52022,-0.5153,-0.51038,-0.50591,-0.50189,-0.49742,-0.49116,-0.48222,-0.46925,-0.45092,-0.42767,-0.40218,-0.38341,-0.38251,-0.39816,-0.4156,-0.42633,-0.4308,-0.43035,-0.42678,-0.41828,-0.40755,-0.39637,-0.38654,-0.37893,-0.37268,-0.36999,-0.37223,-0.37893,-0.3928,-0.41023,-0.42409,-0.4384,-0.44824,-0.45137,-0.45047,-0.44287,-0.41873,-0.37044,-0.31545,-0.27923,-0.26045,-0.26716,-0.28102,-0.28996,-0.28504,-0.27118,-0.25866,-0.24793,-0.24301,-0.2533,-0.26895,-0.28996,-0.31723,-0.34361,-0.36865,-0.36865,-0.3454,-0.30516,-0.28683,-0.35166,-0.41381,-0.46657,-0.49921,-0.51933,-0.52737,-0.52201,-0.52112,-0.53542,-0.55465,-0.5618,-0.5627,-0.55241,-0.54392,-0.53006,-0.50949,-0.49205,-0.47417,-0.45271,-0.42812,-0.39995,-0.36999,-0.33244,-0.29711,-0.25464,-0.20367,-0.14107,-0.065513,-0.0096243,0.082033,0.16475,0.28591,0.40082,0.53138,0.67534,0.83988,1.025,1.2302,1.4529,1.7041,1.9469,2.1884,2.4593,2.6694,2.9033,3.0374,3.0933,3.1604,3.1461,2.9619,2.7996,2.593,2.5058,2.3082,2.086,1.8392,1.5767,1.3406,1.1081,0.80232,0.59889,0.41468,0.1871,-0.049417,-0.22111,-0.39056,-0.52514,-0.6852,-0.8332,-0.92754,-1.025,-1.1162,-1.2275,-1.3022,-1.3805,-1.4426,-1.5128,-1.5624,-1.608,-1.6527,-1.6894,-1.7234,-1.7627,-1.7878,-1.8137,-1.8365,-1.8553,-1.8763,-1.8937});
    
    auto hist = features2hist(features);

    for (int i = 0; i < hist.size(); ++ i) {
        cout << hist[i] << " ";
    }
    cout << endl;
    return 0;
}